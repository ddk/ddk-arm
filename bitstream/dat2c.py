#!/usr/bin/env python

#
# Copyright (c) 2013-2014, The DDK Project
#    Dmitry Nedospasov <dmitry at nedos dot net>
#    Thorsten Schroeder <ths at modzero dot ch>
#
# All rights reserved.
#
# This file is part of Die Datenkrake (DDK).
#
# "THE BEER-WARE LICENSE" (Revision 42):
# <dmitry at nedos dot net> and <ths at modzero dot ch> wrote this file. As
# long as you retain this notice you can do whatever you want with this stuff.
# If we meet some day, and you think this stuff is worth it, you can buy us a
# beer in return. Die Datenkrake Project.
#
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE DDK PROJECT BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# File: dat2c.py
# Description: converts microsemi DAT files to C-format byte-array.
#

import sys
import io


f = open(sys.argv[1])

dat = f.read()
datlen = len(dat)


print ""
print "// do not edit this file."
print "// auto-generated by %s %s" % (sys.argv[0], sys.argv[1])
print ""


print "const unsigned int ddk_bitstream_len = 0x%x;     // %d" % (datlen, datlen)
print ""
print "const unsigned char ddk_bitstream[] = {"
#print "const unsigned char image_buffer[] = {"

i = 0

for x in xrange(datlen):

    if i<7:
        if i == 0:
            print "   0x%02x" % (ord(dat[x])),
        else:
            print ", 0x%02x" % (ord(dat[x])),

        i = i + 1

    elif i >= 7:
        i=0
        print ", 0x%02x," % (ord(dat[x]))


print ""
print "};"
print ""
print "unsigned long image_buffer = (unsigned long)&ddk_bitstream;"
print ""

f.close()

